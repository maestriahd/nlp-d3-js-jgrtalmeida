
<div class="head">
<h1><img src= /images/logo.png alt= "logo" width="150" height=150"></h1>
<h2>Hay mucho más que un río de sangre</h2>
</div>
<div class="second">
  <nav id="menu">
<ul>
  <li> <a href = "/"><img src=/images/inicio.png alt="inicio" width="100" height="100"></a> </li>
  <li> <a href = "/about"><img src=/images/sobre.png alt="sobre" width="100" height="100"></a> </li>
  <li> <a href = "/colabore"><img src=/images/colabore.png alt="colabore" width="110" height="110"></a> </li>
    <li> <a href = "/parcero"><img src=/images/parceros.png alt="parcero" width="110" height="110"></a> </li>
    <li> <a href = "/portfolio"><img src=/images/portfolio.png alt="portfolio" width="110" height="110"></a> </li>
</ul>
</nav>
</div>

<div class="nlp">
  <div id="viz"></div>

  <!-- carga desde el servidor de D3 la librería -->
  <!-- cabe anotar que esta podría estar alojada localmente en la carpeta -->
  <!-- public del proyecto -->
  <script src="https://d3js.org/d3.v4.min.js"></script>

  <script type="text/javascript">
  (function() {
    // map tomado de p5.js
    function map(n, start1, stop1, start2, stop2) {
      return ((n-start1)/(stop1-start1))*(stop2-start2)+start2;
    };
    // Función encargadad de la visualización de datos por medio de D3
    function viz(data){
      // selecciona la división donde se inyectará el SVG
      var svg = d3.select('#viz')
        .append('svg') // agrega un elemento SVG
        .attr('width', 500) // al SVG le agrega el atributo ancho de 400px
        .attr('height', 200) // al SVG le agrega el atributo alto de 200px
      var elem = svg.selectAll('g') // selecciona todos los elementos `g` (grupos)
        .data(data) // enlaza los datos
      var elemEnter = elem.enter()
          .append('g') // agrega un grupo
          .attr('transform', function(d,i){ // aplica una transformación al elemento
            return "translate("+(160*i+40)+", 80)" // calcula la posción relativo a
                                                  // los datos
          })
      var circulo = elemEnter.append('circle') // agrega un circulo
        .attr('stroke', 'black') // la línea de contorno será negra
        .attr('fill', function(d){ // el color de relleno se aplica según el
                                   // resultado de esta función
          if(d.name === 'Sustantivos'){     // si el elemento actual es el sustantivo
            return 'green'  // el color de relleno será verde
          } else {          // de lo contrario
            return 'red'    // el color de relleno será rojo
          }
        })
        .attr('r', function(d){ // el radio dependerá de los items en el array
          return map(d.count, 0, 3863, 10, 50)
        })
      // crea los textos etiquetando cada uno de los círculos
      var txt = elemEnter.append('text') //agrega un elemento de tipo text
        .attr('dy', -35) // la posición en y
        .attr('dx', -20) // la posición en x
        .attr('fill', 'white')
        .text(function(d){ // extrae el texto del parametro `name`
          return d.name
        })
    }
    // para inyectar información detallada del NLP
    // var data = {
    //   sustantivos: {{{ nouns}}}
    // }
    var data = [
      {
        count: {{nouns.length}},
        name: 'Sustantivos'
      },
      {
        count: {{people.length}},
        name: 'Personas'
      },
      {
        count: {{verbs.length}},
        name: 'Verbos'
      }
    ]
    viz(data)
  })();
  </script>

<h1>NLP</h1>

<!-- presenta la lista de sustantivos -->

<h1>Sustantivos [{{nouns.length}}]</h1>
<ul>
  {{#each nouns.list}}
  <li>
    {{this}}
  </li>
  {{/each}}
</ul>
<h1>Verbos [{{verbs.length}}]</h1>
<ul>
  {{#each verbs.list}}
  <li>
    {{this}}
  </li>
  {{/each}}
</ul>
<!-- presenta la lista de personas -->
<h1>Personas [{{people.length}}]</h1>
<ul>
  {{#each people.list}}
  <li>
  {{this}}
  </li>
  {{/each}}
</ul>

<h1>Texto original</h1>
{{txt}}
</div>
